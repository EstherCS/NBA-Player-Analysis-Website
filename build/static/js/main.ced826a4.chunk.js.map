{"version":3,"sources":["assets/images/nba-logoman-word-white.svg","components/TopNavBar.js","nba-client.js","constants.js","components/Profile.js","components/ShotChart.js","components/CounterSlider.js","components/DataViewContainer.js","components/SearchBar.js","components/Main.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","TopNavBar","className","src","logo","alt","Component","nba","stats","playerInfo","PlayerID","fetch","then","res","json","shots","PROFILE_PIC_URL_PREFIX","DEFAULT_PLAYER_INFO","playerId","fullName","teamAbbreviation","Profile","this","props","teamCity","teamName","playerName","country","position","pts","reb","ast","pie","React","window","d3_hexbin","hexbin","ShotChart","response","final_shots","shot_Chart_Detail","map","shot","x","locX","y","locY","action_type","actionType","shot_distance","shotDistance","shot_made_flag","shotMadeFlag","courtSelection","d3","html","chart_court","court","width","chart_shots","shotRenderThreshold","minCount","displayToolTips","displayTooltip","displayType","chartType","call","datum","id","CountSlider","state","inputValue","onChange","value","setState","handleCountSliderChange","span","min","max","style","marginLeft","RadioGroup","Radio","Group","DataViewContainer","count","handleChartTypeChange","e","target","handleTooltipChange","CounterSlider","_","debounce","checkedChildren","unCheckedChildren","defaultChecked","Option","AutoComplete","SearchBar","dataSource","handleSearch","searchPlayers","player","onSelect","name","handleSelectPlayer","options","key","onSearch","placeholder","size","optionLabelProp","suffix","type","Main","loadPlayerInfo","findPlayer","info","playInfo","Object","assign","commonPlayerInfo","playerHeadlineStats","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ced826a4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nba-logoman-word-white.9470e2d5.svg\";","import React, {Component} from 'react';\r\nimport logo from \"../assets/images/nba-logoman-word-white.svg\";\r\n\r\nclass TopNavBar extends Component {\r\n    render() {\r\n        return (\r\n            <header className=\"App-header\">\r\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TopNavBar;","import nba from 'nba';\r\n\r\nconst SERVER_URL = 'https://nba.laiprojects.com';\r\n//const SERVER_URL = 'http://35.235.84.235:5000';\r\nexport default {\r\n    // export all nba\r\n    ...nba,\r\n    // key value pair. We have a variable stats as key\r\n    stats: {\r\n        ...nba.stats,\r\n        // give a ID, then return player status at the url\r\n        playerInfo: function({ PlayerID }) {\r\n            return fetch(`${SERVER_URL}/players/${PlayerID}`).then(res => res.json())\r\n        },\r\n        shots: function({ PlayerID }) {\r\n            return fetch(`${SERVER_URL}/players/${PlayerID}/shots`).then(res => res.json())\r\n        },\r\n    },\r\n};","export const PROFILE_PIC_URL_PREFIX = 'https://ak-static.cms.nba.com/wp-content/uploads/headshots/nba/latest/260x190';\r\nexport const TEAM_PIC_URL_PREFIX = 'https://stats.nba.com/media/img/teams/logos';\r\n\r\nexport const DEFAULT_PLAYER_INFO = {\r\n    // playerId: 201939,\r\n    // fullName: 'Stephen Curry',\r\n    // teamAbbreviation: 'GSW',\r\n    playerId: 2544,\r\n    fullName: 'LeBron James',\r\n    teamAbbreviation: 'LAL',\r\n};","import React from 'react';\r\nimport { PROFILE_PIC_URL_PREFIX, TEAM_PIC_URL_PREFIX } from '../constants';\r\n\r\nclass Profile extends React.Component {\r\n    render() {\r\n        const {\r\n            teamAbbreviation,\r\n            teamCity,\r\n            teamName,\r\n            playerName,\r\n            country,\r\n            position,\r\n            // height,\r\n            // weight,\r\n            playerId,\r\n            pts, reb, ast, pie,\r\n        } = this.props.playerInfo;\r\n        return (\r\n            <div className=\"profile\">\r\n                <div className=\"profile-entry player-name\">{`${playerName}`}</div>\r\n                <img\r\n                    className=\"profile-pic\"\r\n                    src={`${PROFILE_PIC_URL_PREFIX}/${playerId}.png`}\r\n                    alt=\"Profile\"\r\n                />\r\n                <div className=\"profile-entry\">\r\n                    <div className=\"profile-entry-left\">Team</div>\r\n                    <div className=\"profile-entry-right\">{`${teamCity} ${teamName}`}</div>\r\n                </div>\r\n                <img\r\n                    className=\"team-logo\"\r\n                    src={`${TEAM_PIC_URL_PREFIX}/${teamAbbreviation}_logo.svg`}\r\n                    alt=\"\"\r\n                />\r\n                <div className=\"profile-entry\">\r\n                    <div className=\"profile-entry-left\">Country</div>\r\n                    <div className=\"profile-entry-right\">{`${country}`}</div>\r\n                </div>\r\n                <div className=\"profile-entry\">\r\n                    <div className=\"profile-entry-left\">Position</div>\r\n                    <div className=\"profile-entry-right\">{`${position}`}</div>\r\n                </div>\r\n                {/*<div className=\"profile-entry\">*/}\r\n                {/*    <div className=\"profile-entry-left\">Height</div>*/}\r\n                {/*    <div className=\"profile-entry-right\">{`${height}`}</div>*/}\r\n                {/*</div>*/}\r\n                {/*<div className=\"profile-entry\">*/}\r\n                {/*    <div className=\"profile-entry-left\">Weight</div>*/}\r\n                {/*    <div className=\"profile-entry-right\">{`${weight}`}</div>*/}\r\n                {/*</div>*/}\r\n                <div className=\"profile-entry\">\r\n                    <div className=\"profile-entry-left\">Points</div>\r\n                    <div className=\"profile-entry-right\">{`${pts}`}</div>\r\n                </div>\r\n                <div className=\"profile-entry\">\r\n                    <div className=\"profile-entry-left\">Rebound</div>\r\n                    <div className=\"profile-entry-right\">{`${reb}`}</div>\r\n                </div>\r\n                <div className=\"profile-entry\">\r\n                    <div className=\"profile-entry-left\">Assist</div>\r\n                    <div className=\"profile-entry-right\">{`${ast}`}</div>\r\n                </div>\r\n                <div className=\"profile-PIE\">\r\n                    <div className=\"profile-entry-left\">PIE</div>\r\n                    <div className=\"profile-entry-right\">{`${pie}`}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport nba from '../nba-client';\r\nimport * as d3 from 'd3';\r\nimport { hexbin } from 'd3-hexbin';\r\nimport { court, shots } from 'd3-shotchart';\r\nimport PropTypes from 'prop-types';\r\n\r\nwindow.d3_hexbin = {hexbin : hexbin}; // workaround library problem\r\n\r\nclass ShotChart extends React.Component {\r\n    static propTypes = {\r\n        playerId: PropTypes.number.isRequired,\r\n        minCount: PropTypes.number,\r\n        chartType: PropTypes.string,\r\n        displayTooltip: PropTypes.bool,\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        nba.stats.shots({\r\n            PlayerID: this.props.playerId\r\n        }).then((response) => {\r\n            const final_shots = response.shot_Chart_Detail.map(shot => ({\r\n                x: (shot.locX + 250) / 10,\r\n                y: (shot.locY + 50) / 10,\r\n                action_type: shot.actionType,\r\n                shot_distance: shot.shotDistance,\r\n                shot_made_flag: shot.shotMadeFlag,\r\n            }));\r\n            //console.log(final_shots);\r\n            const courtSelection = d3.select(\"#shot-chart\"); // draw on shot-chart\r\n            courtSelection.html('');\r\n            const chart_court = court().width(500); // set the width of canvas\r\n            // set the points features\r\n            const chart_shots =\r\n                shots()\r\n                    .shotRenderThreshold(this.props.minCount)\r\n                    .displayToolTips(this.props.displayTooltip)\r\n                    .displayType(this.props.chartType);\r\n            courtSelection.call(chart_court); // cast points to canvas\r\n            courtSelection.datum(final_shots).call(chart_shots); // draw points\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"shot-chart\"></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShotChart;","import React from 'react';\r\nimport {\r\n    Slider, InputNumber, Row, Col,\r\n} from 'antd';\r\n\r\nexport class CountSlider extends React.Component {\r\n    state = {\r\n        inputValue: 1,\r\n    }\r\n\r\n    onChange = (value) => {\r\n        this.setState({\r\n            inputValue: value,\r\n        });\r\n        this.props.handleCountSliderChange(value);\r\n    }\r\n\r\n    render() {\r\n        const { inputValue } = this.state;\r\n        return (\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Slider\r\n                        min={1}\r\n                        max={20}\r\n                        onChange={this.onChange}\r\n                        value={typeof inputValue === 'number' ? inputValue : 0}\r\n                    />\r\n                </Col>\r\n                <Col span={4}>\r\n                    <InputNumber\r\n                        min={1}\r\n                        max={20}\r\n                        style={{ marginLeft: 16 }}\r\n                        value={inputValue}\r\n                        onChange={this.onChange}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CountSlider;","import React from 'react';\r\nimport ShotChart from './ShotChart';\r\nimport CounterSlider from './CounterSlider';\r\nimport { Radio, Switch, Row, Col } from 'antd';\r\nimport _ from 'lodash';\r\n\r\nconst RadioGroup = Radio.Group;\r\n\r\nclass DataViewContainer extends React.Component {\r\n    state = {\r\n        minCount: 2,\r\n        chartType: 'hexbin',\r\n        displayTooltip: true,\r\n    }\r\n    handleCountSliderChange = (count) => {\r\n        this.setState({ minCount: count });\r\n    }\r\n    handleChartTypeChange = (e) => {\r\n        this.setState({ chartType: e.target.value });\r\n    }\r\n    handleTooltipChange = (displayTooltip) => {\r\n        this.setState({ displayTooltip });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"data-view\">\r\n                <ShotChart\r\n                    playerId={this.props.playerId}\r\n                    minCount={this.state.minCount}\r\n                    chartType={this.state.chartType}\r\n                    displayTooltip={this.state.displayTooltip}\r\n                />\r\n                <div className=\"filters\">\r\n                    {this.state.chartType === 'hexbin' ?\r\n                        <CounterSlider handleCountSliderChange={_.debounce(this.handleCountSliderChange, 500)}/> : null}\r\n                    <Row>\r\n                        <Col span={9}>\r\n                            <RadioGroup onChange={this.handleChartTypeChange} value={this.state.chartType}>\r\n                                <Radio value=\"hexbin\">Hexbin</Radio>\r\n                                <Radio value=\"scatter\">Scatter</Radio>\r\n                            </RadioGroup>\r\n                        </Col>\r\n                        <Col span={4}>\r\n                            <Switch\r\n                                checkedChildren=\"On\"\r\n                                unCheckedChildren=\"Off\"\r\n                                defaultChecked\r\n                                onChange={this.handleTooltipChange}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DataViewContainer;","import React, {Component} from 'react';\r\nimport { AutoComplete, Input, Icon } from 'antd';\r\nimport nba from '../nba-client';\r\nimport { PROFILE_PIC_URL_PREFIX } from '../constants';\r\n\r\nconst Option = AutoComplete.Option;\r\n\r\nclass SearchBar extends Component {\r\n    state = {\r\n        dataSource: [],\r\n    }\r\n\r\n    handleSearch = (value) => {\r\n        const players = nba.searchPlayers(value);\r\n        // console.log(players);\r\n\r\n        this.setState({\r\n            dataSource: !value ? []\r\n                : nba.searchPlayers(value).map(player => ({\r\n                    fullName: player.fullName,\r\n                    playerId: player.playerId,\r\n                }))\r\n        });\r\n    }\r\n\r\n    onSelect = (name) => {\r\n        this.props.handleSelectPlayer(name);\r\n    }\r\n\r\n    render() {\r\n        const { dataSource } = this.state;\r\n        const options = dataSource.map((player) => (\r\n            <Option key={player.fullName} value={player.fullName} className=\"player-option\">\r\n                <img className=\"player-option-image\" src={`${PROFILE_PIC_URL_PREFIX}/${player.playerId}.png`}/>\r\n                <span className=\"player-option-label\">{player.fullName}</span>\r\n            </Option>\r\n        ));\r\n        return (\r\n            <AutoComplete\r\n                className=\"search-bar\"\r\n                dataSource={options}\r\n                onSelect={this.onSelect}\r\n                onSearch={this.handleSearch}\r\n                placeholder=\"Search NBA Player\"\r\n                size=\"large\"\r\n                optionLabelProp=\"value\"\r\n            >\r\n\r\n                <Input suffix={<Icon type=\"search\" className=\"certain-category-icon\" />} />\r\n            </AutoComplete>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React, {Component} from 'react';\r\n\r\nimport nba from '../nba-client';\r\nimport Profile from './Profile';\r\nimport DataViewContainer from './DataViewContainer';\r\nimport SearchBar from './SearchBar';\r\n\r\nimport { DEFAULT_PLAYER_INFO } from '../constants';\r\n\r\nclass Main extends Component {\r\n    state = {\r\n        playerInfo: DEFAULT_PLAYER_INFO\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.nba = nba;\r\n        this.loadPlayerInfo(DEFAULT_PLAYER_INFO.fullName);\r\n    }\r\n\r\n    loadPlayerInfo = (playerName) => {\r\n        nba.stats.playerInfo({ PlayerID: nba.findPlayer(playerName).playerId}).then((info) => {\r\n            //console.log(info);\r\n            const playInfo = Object.assign(info.commonPlayerInfo[0], info.playerHeadlineStats[0]);\r\n            //console.log(playInfo);\r\n            this.setState({ playerInfo: playInfo });\r\n        })\r\n    }\r\n\r\n    handleSelectPlayer = (playerName) => {\r\n        this.loadPlayerInfo(playerName);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <SearchBar handleSelectPlayer={this.handleSelectPlayer}/>\r\n                <div className=\"player\">\r\n                    <Profile playerInfo={this.state.playerInfo} />\r\n                    <DataViewContainer playerId={this.state.playerInfo.playerId}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;","import React from 'react';\nimport TopNavBar from './TopNavBar';\nimport Main from './Main';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TopNavBar />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}